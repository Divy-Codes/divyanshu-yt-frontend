@import '../../base.scss'; //To use global variables

.header {
  height: 10vh;
  width: 100%;
  display: flex;
  align-items: center;
  justify-content: space-between;
  padding: 1rem 2rem;
  background-color: $black-primary;
  position: fixed;
  top: 0;
  z-index: 10;

  .menuContainer {
    display: flex;
    gap: 1rem;
    align-items: center;
    justify-content: center;
  }

  .youtubeLogo {
    height: 30px;
    width: 30px;
    object-fit: contain;
    display: block;
  }

  form {
    flex: 0.45; //Since parent is flex. This would make it's width as 45% of parent
    display: flex;
    margin: 0 1rem;
    border-radius: 50px;
    background-color: $black-secondary;

    input {
      width: 100%;
      background-color: transparent;
      border: none;
      box-shadow: 0px 0px 0px 1.2px #333 inset; //For inset border
      border-top-left-radius: inherit;
      border-bottom-left-radius: inherit;
      font-weight: 500;
      color: $text-color;
      padding: 0.5rem 1rem;

      &:focus {
        outline: none;
      }
    }

    button {
      padding: 0 1.25rem;
      color: #eee;
      background-color: #242424;
      border: none;
      border-top-right-radius: inherit;
      border-bottom-right-radius: inherit;
      font-weight: 500;
      cursor: pointer;
      &:focus {
        border: none;
      }
      &:disabled {
        color: #777;
        cursor: default;
        font-weight: 400;
      }
    }
  }

  .userAvatar {
    border-radius: 50%;
  }
}

// Media Queries
@media (max-width: 76.5625em) {
  .header {
    form {
      // flex: 1;
      flex-basis: 50%;
    }
  }
}

@media (max-width: $breakpoint-tablets-potrait) {
  .header {
    form {
      // flex: 1;
      flex-basis: 60%;

      input {
        padding: 0.25rem 1rem;
        font-size: 0.875rem; //14px;
      }
    }
  }
}

@media (max-width: $breakpoint-small) {
  .header {
    padding: 1.5rem 1rem;

    form {
      flex-basis: 100%; //Take 100% length in samll screens

      input {
        padding: 0.25rem 1rem;
      }
    }

    //Select all userFeatures children except ".user"
    .userFeatures > *:not(.user) {
      display: none;
    }
  }
}
